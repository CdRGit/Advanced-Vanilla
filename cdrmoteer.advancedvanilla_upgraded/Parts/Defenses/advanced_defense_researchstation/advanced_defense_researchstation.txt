Part : /BASE_PART
{
	NameKey = "Parts/AdvancedDefenseResearchStation"
	IconNameKey = "Parts/AdvancedDefenseResearchStationIcon"
	IDString = cdrmoteer.advanced_defense_researchstation
	OtherIDs = [advanced_defense_researchstation]
	EditorGroup = "advanced_vanilla_group_defenses"
	DescriptionKey = "Parts/AdvancedDefenseResearchStationDesc"
	Cost = 15000
	AIValue = 30
	Size = [3, 3]
	SelectionPriority = 1
	MaxHealth = 9000
	InitialPenetrationResistance = 1
	TypeCategories = [advanced_defense_main]
	IgnoreRotationForMirroredSelection = true
	BlockedTravelCells
	[
		[1, 1]
	]
	ForceManhattenPathInPart = true
	AllowedDoorLocations
	[
		[1, -1]
		[-1, 1]
		[3, 1]
		[1, 3]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	ReceivableBuffs = [AutoWeaponsEnable] // This makes sure the weapon can recieve the AutoWeaponsEnable buff
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = battery
			MaxAmmo = 4000
			Priorities = &/PRIORITIES/Utility_Supply
			JobUnassignThreshold = 1000000// Effectively unassignable.
			ResupplyThreshold = 1000
			AmmoDesireToggle = PowerToggle

			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		PowerDrain
		{
			Type = AmmoConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity = 100
			Interval = 1
		}

		BuffProvider
		{
			Type = GridBuffProvider
			BuffType = Advanced_Vanilla_Defense
			BuffAmount = 50%
			GridDistance = 5
			OperationalToggle = IsOperational
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [1.5, 2.35]
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.5, 0.75]
			Rotation = 0d
		}
		
		RealPartCrew
		{
			Type = PartCrew
			Crew = 2
			Priorities = &/PRIORITIES/Utility_Crew
			PrerequisitesBeforeCrewing = [BatteryStorage, PowerToggle]
			CrewDestinations
			[
				[1.5, 2.35]
				[.65, 1.5]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}
		
		PartCrew // PartCrew is replaced with a multi-toggle, which will trigger if either the buff is received, *or* if there is crew present.
		{
			Type = MultiToggle
			Toggles = [WeaponControllerBuffToggle, RealPartCrew]
			Mode = Any
		}
		
		WeaponControllerBuffToggle // The buff toggle is triggered by the weapon controller
		{
			Type = BuffToggle
			BuffType = AutoWeaponsEnable
		}

		Graphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 3]
					}
					{
						File = "floor_33.png"
						Size = [3, 3]
					}
					{
						File = "floor_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [3, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [3, 3]
					}
					{
						File = "walls_33.png"
						Size = [3, 3]
					}
					{
						File = "walls_66.png"
						Size = [3, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [3, 3]
					}
					{
						File = "roof_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads_on1.png"
							"roof_doodads_on2.png"
							"roof_doodads_on3.png"
							"roof_doodads_on4.png"
							"roof_doodads_on5.png"
							"roof_doodads_on6.png"
							"roof_doodads_on7.png"
							"roof_doodads_on8.png"
						]
						Size = [5, 5]
						AnimationInterval = 0.1
						RotSpeed = 60d
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_doodads_off.png"
						Size = [3, 3]
					}
				]
			}
		}

		EngineHum
		{
			Type = ContinuousEffects
			Location = [1.5, 1.5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterHum
				{
					Volume = .2
					Speed = 1
					MaxConcurrentVolume = 1
				}
			]
		}
		

		BatterySprites
		{
			Type = AmmoSprites
			Location = [1.5, 1.5]
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 2]
				}
				{
					File = "batteries2.png"
					Size = [2, 2]
				}
				{
					File = "batteries3.png"
					Size = [2, 2]
				}
				{
					File = "batteries4.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [1.5, 1.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
		}

		PowerUIStats
		{
			Type = UIStats
			Stat = Power
			Min = .5
			Ideal = .5
		}
		CrewUIStats
		{
			Type = UIStats
			Stat = Crew
			Min = 2
			Ideal = 2
		}
	}
}
